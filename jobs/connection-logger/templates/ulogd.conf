# Configuration for ulogd

[global]
######################################################################
# GLOBAL OPTIONS
######################################################################


# logfile for status messages
logfile="syslog"

# loglevel: debug(1), info(3), notice(5), error(7) or fatal(8) (default 5)
loglevel=3

######################################################################
# PLUGIN OPTIONS
######################################################################

# We have to configure and load all the plugins we want to use

# general rules:
# 1. load the plugins _first_ from the global section
# 2. options for each plugin in seperate section below

plugin="/usr/lib/x86_64-linux-gnu/ulogd/ulogd_inppkt_NFLOG.so"
plugin="/usr/lib/x86_64-linux-gnu/ulogd/ulogd_raw2packet_BASE.so"
plugin="/usr/lib/x86_64-linux-gnu/ulogd/ulogd_inpflow_NFCT.so"
plugin="/usr/lib/x86_64-linux-gnu/ulogd/ulogd_filter_IFINDEX.so"
plugin="/usr/lib/x86_64-linux-gnu/ulogd/ulogd_filter_IP2STR.so"
plugin="/usr/lib/x86_64-linux-gnu/ulogd/ulogd_filter_PRINTPKT.so"
plugin="/usr/lib/x86_64-linux-gnu/ulogd/ulogd_filter_PRINTFLOW.so"
plugin="/usr/lib/x86_64-linux-gnu/ulogd/ulogd_output_SYSLOG.so"
plugin="/var/vcap/packages/ulogd/output_DROPSONDE.so"
plugin="/var/vcap/packages/ulogd/filter_DIEGOINSTANCE.so"

######################################################################
# STACK DEFINITIONS
######################################################################

# stack=log32:NFLOG,base1:BASE,ifi1:IFINDEX,ip2str1:IP2STR,ip2inst1:IP2INSTANCE,print1:PRINTPKT,ds1:DROPSONDE

stack=nflog:NFLOG,empty:BASE,empty:DIEGOINSTANCE,drops:DSONDE
stack=ct1:NFCT,empty:DIEGOINSTANCE,connlog:DSONDE

######################################################################
# PLUGIN INSTANCE CONFIG
######################################################################

[nflog]
group=26

[empty]

[drops]
origin=<%= spec.id %>
sender=NET
instance=<%= spec.index %>
# the ulogd config parser limits config values to 255 chars each; additionally, it is incapable of reading 0x22 (ASCII double-quote) within a config value; thus the weird escaping,
# which is transformed by the plugins before passing these config values to golang's text/template for interpolation.
format="{{if ne \x226\x22 (ikey \x22ip.protocol\x22)}}{{dsonde \x22nothing\x22}}skip{{else}}{{dsonde \x22err\x22}}DROP {{ikey \x22ip.daddr\x22}}:{{ikey \x22tcp.dport\x22}} {{template \x22f1\x22}}{{end}} "
f1="(Cloud Foundry's firewall has prevented an outbound TCP connection)"

[ct1]
hash_enable=0
event_mask=5

[connlog]
origin=<%= spec.id %>
sender=NET
instance=<%= spec.index %>
format="{{if eq (ikey \x22ct.event\x22) \x221\x22}}{{template \x22f1\x22}}{{else if eq (ikey \x22reply.raw.pktcount\x22) \x220\x22}}{{template \x22f2\x22}}{{template \x22f3\x22}}{{else}}{{template \x22f4\x22}}{{end}}"
f1="{{if ne \x226\x22 (ikey \x22orig.ip.protocol\x22)}}{{dsonde \x22nothing\x22}}skip{{else}}{{dsonde \x22out\x22}}CONN {{ikey \x22orig.ip.daddr\x22}}:{{ikey \x22orig.l4.dport\x22}}{{end}}"
f2="{{dsonde \x22err\x22}}FAIL {{ikey \x22orig.ip.daddr\x22}}:{{ikey \x22orig.l4.dport\x22}} (An outbound connection failed for an unknown reason, maybe check network firewall?)"
f4="{{dsonde \x22nothing\x22}}"
